---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: kafka-map
  name: kafka-map
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/name: kafka-map
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/name: kafka-map
    spec:
      containers:
        - env:
            - name: DEFAULT_USERNAME
              value: admin
            - name: DEFAULT_PASSWORD
              value: kafka
            - name: SERVER_PORT
              value: '8081'
          image: 'dushixiang/kafka-map:latest'
          imagePullPolicy: IfNotPresent
          name: kafka-map
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /usr/local/kafka-map/data
              name: volume-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /opt/jxbp/kafka-map/data
            type: DirectoryOrCreate
          name: volume-data

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: kafka-map
  name: kafka-map
spec:
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: gtcemp
      nodePort: 8081
      port: 8081
      protocol: TCP
      targetPort: 8081
  selector:
    k8s.kuboard.cn/name: kafka-map
  sessionAffinity: None
  type: NodePort
